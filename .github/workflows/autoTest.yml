# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ '*' ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    strategy:
      matrix:
        include:
          - os: macos-10.15
            ROOT_URL: https://root.cern/download/root_v6.22.08.macos-10.15-x86_64-clang120.tar.gz
          - os: ubuntu-20.04
            ROOT_URL: https://root.cern/download/root_v6.22.08.Linux-ubuntu20-x86_64-gcc9.3.tar.gz

    # The type of runner that the job will run on
    runs-on: ${{ matrix.os }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: download ROOT
        run: |
          pushd ../
          mkdir root
          wget --no-check-certificate --quiet -O - "${{ matrix.ROOT_URL }}" | tar --strip-components=1 -xz -C root
          popd

      # configure
      - name: Configure
        run: |
          source ../root/bin/thisroot.sh
          root-config --libs
          root-config --cflags
          cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug

      # build
      - name: Build
        run: |
          source ../root/bin/thisroot.sh
          cmake --build build --config Debug -- -j

      # test
      - name: Test
        run: |
          source ../root/bin/thisroot.sh
          cd build
          ctest -C Debug --output-on-failure --verbose
