#//*****************************************************************************/
#// Author: Xuefeng Ding <xuefeng.ding.physics@gmail.com>
#// Insitute: Gran Sasso Science Institute, L'Aquila, 67100, Italy
#// Date: 2018 April 7th
#// Version: v1.0
#// Description: GooStats, a statistical analysis toolkit that runs on GPU.
#//
#// All rights reserved. 2018 copyrighted.
#//*****************************************************************************/
#// example setting for a simple fit

#// list of things to be provided here:
#// - The histogram of the observable of selected events.
#// - The histograms needed to construct the components
#// data histogram and (MC) componnets are loaded from TFile or txt.
# data is named as "main".
# here we name flat background as "fbkg"
inputSpectra = default.main:fbkg
# here data histogram is provided from a TH1 in a TFile
# multiple root files can be provided
inputSpectraFiles = data/data.root
default.main_histName = data
# here flat bkg is provided from a txt file
fbkg_inputTxt = data/fbkg.txt
# read SimplePackage/src/SimpleInputBuilder.cc for more details

#// - The list of components
components = gaus:fbkg
#// - their \pdf{} types
gaus_type = AnaPeak 
fbkg_type = MC # MC type will load its pdf from corresponding histogram
# read SimplePackage/src/SimpleSpectrumBuilder.cc for more details

#// - The initial guess and range of rates and response function parameters
# visible energy range, bins
EvisVariable = E_{vis}(MeV) # label on the figure
Evis_min = 2 # in MeV. should be consistent with data histogram
Evis_max = 12 
Evis_nbins  = 100
# rate of each component
# notice there is "N" prefix here but no "N" prefix in hte pullPars
gaus_init = 10 # unit: countx per (day x kt)^{-1}
gaus_err = 0.01
gaus_min = 0
gaus_max = 100
fbkg_init = 0.1
fbkg_err = 0.001
fbkg_min = 0
fbkg_max = 10
# pdf parameters
## pdf of 'gaus': AnaPeak type
gaus_Evis_init = 4.7
gaus_Evis_err = 0.1
gaus_Evis_min = 3
gaus_Evis_max = 7
# read SimplePackage/src/SimpleDatasetController.cc for more details
RPFtype = ModifiedGaussian # shape of the peak. can choose ModifiedGaussian|GeneralizedGamma|ScaledPoisson
NLtype = expPar # non-linearity type. can be Mach4|Echidna|expPar. not used, so randomly choose one
# relation between width and peak of the gaus
# var = sdn*sdn + mu*(1+v1)*feq + sigmaT*sigmaT*mu*mu
sdn_init = 0.7 #
sdn_err = 0.01
sdn_min = 0.001
sdn_max = 10
feq = 0
v1_init = 0 # v1 useful for more complex case
v1_err = 0
v1_min = 0
v1_max = 0
sigmaT_init = 0 # width and skewness
sigmaT_err = 0
sigmaT_min = 0
sigmaT_max = 0
# kappa = g2*mu + 3*(1+v1)*feq*sigmaT*sigmaT*mu*mu
g2_init = 0 # g2: for skewness
g2_err = 0
g2_min = 0
g2_max = 0
# read PDFs/src/ResposeFunctionPdf_impl.cu, PDFs/src/ResponseFunctionPdf_NLRES.cu

# - The list of pull terms, including the name of the constrained parameter, the centroid and the width of the
# constraint.
pullPars = gaus_Epeak # see SimplePackage/src/SimpleInputBuilder.cc
gaus_Epeak_centroid = 4.9 # see SimplePackage/src/PullDatasetController.cc
gaus_Epeak_sigma = 0.5

#// auxilinary parameters controlling fitting procedure
chisquareFit = false // chisquare fit or Poisson likelihoood fit
fitFakeData = no # if on, random data is generated according to pdf.
seed = 1 # random seed
#repeat = 1 # repeat. useful if fitFakeData is yes

exposure = 1000 # unit: day x kt. we can also set it from the command line
